from imports import *
from utils import *
# -*- coding: utf-8 -*-
# from business.business_menu import business_menu
from expenses.expense_menu import expense_menu
from savings.savings_menu import savings_menu
from settings.setting_menu import settings_menu
# =================================THEME===============================================
from theme.changeThemes import *
# ================================================================================
from terminaltexteffects.effects.effect_wipe import Wipe


# Check gi·ªù ƒë·ªÉ in l·ªùi ch√†o s√°ng, chi·ªÅu, t·ªëi
def get_greeting():
    if 5 <= current_hour < 12:
        return 'Ch√†o bu·ªïi s√°ng, ch√∫c b·∫°n bu·ªïi s√°ng t·ªët l√†nh! ‚õÖ '
    elif 12 <= current_hour < 18:
        return 'Ch√†o bu·ªïi chi·ªÅu, ch√∫c b·∫°n bu·ªïi chi·ªÅu vui v·∫ª! üåÑ '
    else:
        return 'Ch√†o bu·ªïi t·ªëi, ch√∫c b·∫°n bu·ªïi t·ªëi th∆∞ gi√£n! üåù '


# In ra l·ªùi ch√†o
# print('Ng√†y: ' + current_date + '\n')
if theme_settings.get("program_name") in seasonal_themes: 
    print(selected_color + get_greeting(), Fore.CYAN + dt_string + '\n')
else: 
    effect = Wipe(get_greeting() + dt_string )
    with effect.terminal_output() as terminal:
        for frame in effect:
            terminal.print(frame + "\n")
  


# D·ª± b√°o th·ªùi ti·∫øt ho·∫∑c c√°i g√¨ ƒë√≥ ƒë·∫°i lo·∫°i v·∫≠y 
# ==============================

# Menu cho ng∆∞·ªùi d√πng ch·ªçn ch·ª©c nƒÉng
def main_menu():
    while True:
        # Menu ch√≠nh ƒë·ªÉ ch·ªçn nh√≥m ch·ª©c nƒÉng
        main_choices = [
            # "Ti·∫øt ki·ªám",
            # "Kinh doanh",
            "Ki·ªÉm so√°t chi ti√™u",
            "Xem danh m·ª•c chi ti√™u",
            #ü™ô "Gi√° v√†ng",
            #‚òÅÔ∏è "Th·ªùi ti·∫øt",
            "C√†i ƒë·∫∑t",
            "‚ùå Tho√°t"
        ]

        main_questions = [
            inquirer.List(
                'main_choice',
                message= 5*'*' + " Ch·ªçn ch·ª©c nƒÉng b·∫°n mu·ªën th·ª±c hi·ªán "  + 5*'*',
                choices=main_choices,
            )
        ]

        main_answer = inquirer.prompt(main_questions)

        # if main_answer['main_choice'] == "Kinh doanh":
        #     business_menu()
        # if main_answer['main_choice'] == "Ti·∫øt ki·ªám":
        #     savings_menu()  
        if main_answer['main_choice'] == "Ki·ªÉm so√°t chi ti√™u":
            expense_menu()
        elif main_answer['main_choice'] == "Xem danh m·ª•c chi ti√™u":
            expenses = load_expenses()
            give_spending_advice(expenses) 
        elif main_answer['main_choice'] == "C√†i ƒë·∫∑t":  # G·ªçi h√†m thay ƒë·ªïi theme
            settings_menu()
        elif main_answer['main_choice'] == "‚ùå Tho√°t":
            print(end_line)
            print(10*'=' + " | C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng ch∆∞∆°ng tr√¨nh! | " + 10*'=')
            print(end_line + '\n')
            break

# Cho l·ªùi khuy√™n chi ti√™u n·∫øu kh√¥ng h·ª£p l√Ω th√¨ s·∫Ω th√¥ng b√°o
def give_spending_advice(expenses):
    # T·ªïng h·ª£p chi ti√™u theo t·ª´ng lo·∫°i v√† t·ª´ng th√°ng
    monthly_category_totals = defaultdict(lambda: defaultdict(float))
    
    for user, dates in expenses.items():
        for date, expense_list in dates.items():
            year_month = datetime.strptime(date, '%Y-%m-%d').strftime('%Y-%m')  # Ch·ªâ l·∫•y nƒÉm v√† th√°ng
            for expense in expense_list:
                category = expense['category']
                amount = expense['amount'] * expense.get('quantity', 1)  # Nh√¢n v·ªõi s·ªë l∆∞·ª£ng n·∫øu c√≥
                monthly_category_totals[year_month][category] += amount

    advice = []
    table_data = []  

    # M·ª©c chi ti√™u ƒë∆∞a ra 
    reasonable_limits = {
        "ƒêi ch·ª£ si√™u th·ªã": 3000000,
        "Nh√† h√†ng": 500000,
        "Chi tr·∫£ h√≥a ƒë∆°n": 1000000,
        "Ti·ªÅn nh√†": 2500000,
        "ƒêi l·∫°i": 1000000,
        "Vui ch∆°i gi·∫£i tr√≠": 500000,
        "Mua s·∫Øm": 1000000,
        "Gi√°o d·ª•c": 2000000,
        "Y t·∫ø": 1000000,
        "B·∫£o hi·ªÉm": 2000000,
        "Ti·∫øt ki·ªám": 0,  
        "Ch·ª©ng kho√°n": 0,
        "B·∫•t ƒë·ªông s·∫£n": 0,
        "Qu·ªπ": 0,
        "S·ª± ki·ªán": 1000000,
        "Bi·∫øu t·∫∑ng": 500000,
        "D·ªãch v·ª• c√¥ng": 500000,
        "ƒê·ªì gia d·ª•ng": 1000000,
        "Kh√°c": 500000,
    }

    # T·∫°o d·ªØ li·ªáu cho b·∫£ng
    for year_month, category_totals in monthly_category_totals.items():
        for category, total in category_totals.items():
            limit = reasonable_limits.get(category, 0)
            
            if limit != 0 and total > limit:
                advice_text = Fore.RED + "V∆∞·ª£t m·ª©c"
                advice.append(
                    Fore.RED + f"Th√°ng {year_month} - Chi ti√™u cho {category} ({total:,} VNƒê) v∆∞·ª£t m·ª©c h·ª£p l√Ω ({limit:,} VNƒê)."
                )
            elif limit == 0 and total > 0:
                advice_text = Fore.YELLOW + "Kh√¥ng gi·ªõi h·∫°n"
            else:
                advice_text = Fore.GREEN + "H·ª£p l√Ω"

            # Th√™m d·ªØ li·ªáu v√†o b·∫£ng
            table_data.append([
                year_month, 
                category, 
                f"{total:,} VNƒê", 
                f"{limit:,} VNƒê" if limit != 0 else "Kh√¥ng gi·ªõi h·∫°n", 
                advice_text + Style.RESET_ALL  # Reset m√†u sau m·ªói d√≤ng
            ])

    # B·∫£ng t·ªïng h·ª£p
    headers = [
        Fore.CYAN + "Th√°ng" + Style.RESET_ALL,
        Fore.CYAN + "Danh m·ª•c" + Style.RESET_ALL,
        Fore.CYAN + "Chi ti√™u" + Style.RESET_ALL,
        Fore.CYAN + "M·ª©c h·ª£p l√Ω" + Style.RESET_ALL,
        Fore.CYAN + "Tr·∫°ng th√°i" + Style.RESET_ALL
    ]

    print(Fore.LIGHTBLUE_EX + "B·∫£ng t·ªïng chi ti√™u theo danh m·ª•c v√† th√°ng:" + Style.RESET_ALL)
    print(tabulate(table_data, headers=headers, tablefmt="rounded_outline"))

    # In ra l·ªùi khuy√™n
    print("\n" + Fore.LIGHTBLUE_EX + "L·ªùi khuy√™n chi ti√™u:" + Style.RESET_ALL)
    if not advice:
        print(Fore.GREEN + "Chi ti√™u c·ªßa b·∫°n trong c√°c h·∫°ng m·ª•c hi·ªán t·∫°i ƒëang h·ª£p l√Ω. Ti·∫øp t·ª•c duy tr√¨!" + Style.RESET_ALL + "\n" )
    else:
        for line in advice:
            print(line + Style.RESET_ALL + "\n" )

# Ch·∫°y menu ch√≠nh
main_menu()

